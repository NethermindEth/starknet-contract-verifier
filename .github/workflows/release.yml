name: Release Build

on:
  workflow_call:
    inputs:
      # Must start with 'v'
      tag:
        required: true
        type: string
      ref:
        required: false
        type: string
      full-verify:
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      # Must start with 'v'
      tag:
        required: true
        type: string
      ref:
        required: false
        type: string
      full-verify:
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    env:
      # Cross-compiled targets will override this to `cross`.
      CARGO: cargo
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            # Use cross to link oldest GLIBC possible.
            cross: true

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            cross: true

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            cross: true

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            cross: true

          - target: x86_64-apple-darwin
            os: macos-13

          - target: aarch64-apple-darwin
            os: macos-14

          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Install cross
        if: matrix.cross
        uses: taiki-e/install-action@cross

      - name: Enable cross-compilation
        if: matrix.cross
        shell: bash
        run: echo "CARGO=cross" >> $GITHUB_ENV

      - name: Build
        run: ${{ env.CARGO }} build --release --locked --target ${{ matrix.target }}

      - name: Create archive
        shell: bash
        run: |
          mkdir -p staging
          
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            cp target/${{ matrix.target }}/release/voyager.exe staging/
            cd staging
            7z a ../voyager-verifier-${{ inputs.tag }}-${{ matrix.target }}.zip voyager.exe
          else
            cp target/${{ matrix.target }}/release/voyager staging/
            cd staging
            tar czf ../voyager-verifier-${{ inputs.tag }}-${{ matrix.target }}.tar.gz voyager
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: voyager-verifier-${{ inputs.tag }}-${{ matrix.target }}.*

  verify:
    name: verify ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    needs: build

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04

          - target: aarch64-apple-darwin
            os: macos-14

          - target: x86_64-pc-windows-msvc
            os: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: target/verify

      - name: Verify archive
        shell: bash
        run: |
          cd target/verify
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            archive=$(find . -name '*.zip')
            7z x "$archive"
            ./voyager.exe --version
          else
            archive=$(find . -name '*.tar.gz')
            tar -xzf "$archive"
            ./voyager --version
          fi

  checksums:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts-dl

      - name: Unpack artifacts to staging directory
        run: |
          mkdir -p artifacts
          mv artifacts-dl/build-*/voyager-verifier-* artifacts/

      - name: Compute checksums
        working-directory: artifacts
        run: |
          sha256sum -b voyager-verifier-* > checksums.sha256
          cat checksums.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: checksums
          path: artifacts/checksums.*